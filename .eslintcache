[{"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\index.js":"1","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\App.js":"2","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\reportWebVitals.js":"3","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\Input.js":"4","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\UserCard.js":"5","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\services\\users.js":"6","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\AddUserModal.js":"7","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\EditUserModal.js":"8","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\VismaUsers.js":"9","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\services\\geo.js":"10"},{"size":500,"mtime":1607597582581,"results":"11","hashOfConfig":"12"},{"size":354,"mtime":1607722559246,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607597582581,"results":"14","hashOfConfig":"12"},{"size":1190,"mtime":1607604826036,"results":"15","hashOfConfig":"12"},{"size":2104,"mtime":1608235457149,"results":"16","hashOfConfig":"12"},{"size":711,"mtime":1608208447710,"results":"17","hashOfConfig":"12"},{"size":2572,"mtime":1607789504290,"results":"18","hashOfConfig":"12"},{"size":2551,"mtime":1607785650450,"results":"19","hashOfConfig":"12"},{"size":7037,"mtime":1608229360531,"results":"20","hashOfConfig":"12"},{"size":429,"mtime":1608212567579,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"xx0iin",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\index.js",[],["46","47"],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\App.js",[],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\reportWebVitals.js",[],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\Input.js",[],["48","49"],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\UserCard.js",[],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\services\\users.js",["50"],"import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/users'\r\n\r\nconst getAll = async () => {\r\n\tconst request = axios.get(baseUrl)\r\n\tconst response = await request\r\n\treturn response.data\r\n}\r\nconst create = async newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\tconst response = await request\r\n\treturn response.data\r\n}\r\nconst update = async (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\tconst response = await request\r\n\treturn response.data\r\n}\r\nconst deleteUser = async id => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\tconst response = await request\r\n\treturn response.data\r\n}\r\n\r\nexport default { getAll, create, update, deleteUser }\r\n","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\AddUserModal.js",[],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\EditUserModal.js",[],"C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\components\\VismaUsers.js",["51"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport userService from '../services/users'\r\nimport { getGeoData } from '../services/geo'\r\n\r\nimport UserCard from './UserCard'\r\nimport EditUserModal from './EditUserModal'\r\nimport AddUserModal from './AddUserModal'\r\n\r\nconst VismaUsers = () => {\r\n\tconst [users, setUsers] = useState([])\r\n\r\n\tconst [updatedUser, setUpdatedUser] = useState({\r\n\t\tfullName: '',\r\n\t\temail: '',\r\n\t\tlat: '',\r\n\t\tlng: '',\r\n\t\taddress: {\r\n\t\t\tcity: '',\r\n\t\t\tstreet: '',\r\n\t\t\thouseNr: '',\r\n\t\t\tzip: '',\r\n\t\t},\r\n\t})\r\n\tconst [openEditModal, setOpenEditModal] = useState(false)\r\n\tconst [openAddUserModal, setOpenAddUserModal] = useState(false)\r\n\tconst [userId, setUserId] = useState('')\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(async () => {\r\n\t\tconst initialUsers = await userService.getAll()\r\n\t\tsetUsers(initialUsers)\r\n\t}, [])\r\n\r\n\tconst handelDeleteBtnClick = id => {\r\n\t\tif (window.confirm('Do you realy want to delete user?')) {\r\n\t\t\tuserService.deleteUser(id).then(() => {\r\n\t\t\t\tsetUsers(users.filter(user => user.id !== id))\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handelOpenEditModal = id => {\r\n\t\tconsole.log('Editmodal atsidaro ', id)\r\n\t\tsetUserId(id)\r\n\t\tsetOpenEditModal(true)\r\n\t}\r\n\t// ======== EDIT USER ===============\r\n\tconst onChangeSave = (e, userId) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconsole.log('newUpdatedUser', updatedUser)\r\n\t\tuserService\r\n\t\t\t.update(userId, updatedUser)\r\n\t\t\t.then(returnedUser => {\r\n\t\t\t\tsetUsers(users.map(user => (user.id !== userId ? user : returnedUser)))\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\talert('Error Alert!', error)\r\n\t\t\t})\r\n\t\tsetOpenEditModal(false)\r\n\t\talert('User updated.')\r\n\t}\r\n\t// ================ SAVE NEW USER ==============\r\n\r\n\tconst latLng = (query, updatedUser, callback) => {\r\n\t\tgetGeoData(query).then(returnedData => {\r\n\t\t\tconsole.log('CIA RETURNED DATA', returnedData.data[0])\r\n\t\t\tconst filteredData = returnedData.data.filter(\r\n\t\t\t\tdata =>\r\n\t\t\t\t\tdata.region.toLowerCase() ===\r\n\t\t\t\t\t\tupdatedUser.address.city.toLowerCase() &&\r\n\t\t\t\t\tdata.number === updatedUser.address.houseNr\r\n\t\t\t)\r\n\t\t\tconsole.log('PO FILTRO', filteredData[0])\r\n\t\t\tsetUpdatedUser({\r\n\t\t\t\t...updatedUser,\r\n\t\t\t\tlat: filteredData[0].latitude,\r\n\t\t\t\tlng: filteredData[0].longitude,\r\n\t\t\t})\r\n\r\n\t\t\tconst newUser = {\r\n\t\t\t\tfullName: updatedUser.fullName,\r\n\t\t\t\temail: updatedUser.email,\r\n\t\t\t\tlat: filteredData[0].latitude,\r\n\t\t\t\tlng: filteredData[0].longitude,\r\n\t\t\t\taddress: {\r\n\t\t\t\t\tcity: updatedUser.address.city,\r\n\t\t\t\t\tstreet: updatedUser.address.street,\r\n\t\t\t\t\thouseNr: updatedUser.address.houseNr,\r\n\t\t\t\t\tzip: updatedUser.address.zip,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t\tcallback(newUser)\r\n\t\t})\r\n\t}\r\n\r\n\tconst saveUser = updatedUser => {\r\n\t\tuserService\r\n\t\t\t.create(updatedUser)\r\n\t\t\t.then(returnedUser => {\r\n\t\t\t\tsetUsers(users.concat(returnedUser))\r\n\t\t\t})\r\n\t\t\t.then(setOpenAddUserModal(false))\r\n\t\t\t.catch(error => {\r\n\t\t\t\talert('Error On New User Save!', error)\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst onNewUserSave = e => {\r\n\t\te.preventDefault()\r\n\t\tconst query = `${updatedUser.address.houseNr} ${updatedUser.address.street} ${updatedUser.address.city}`\r\n\t\tlatLng(query, updatedUser, saveUser)\r\n\r\n\t\t// getGeoData(query).then(returnedData => {\r\n\t\t// \tconsole.log('CIA RETURNED DATA', returnedData.data[0])\r\n\t\t// \tconst filteredData = returnedData.data.filter(\r\n\t\t// \t\tdata =>\r\n\t\t// \t\t\tdata.region.toLowerCase() ===\r\n\t\t// \t\t\t\tupdatedUser.address.city.toLowerCase() &&\r\n\t\t// \t\t\tdata.number === updatedUser.address.houseNr\r\n\t\t// \t)\r\n\t\t// \tconsole.log('PO FILTRO', filteredData[0])\r\n\r\n\t\t// \tsetUpdatedUser({\r\n\t\t// \t\t...updatedUser,\r\n\t\t// \t\tlat: filteredData[0].latitude,\r\n\t\t// \t\tlng: filteredData[0].longitude,\r\n\t\t// \t})\r\n\t\t// })\r\n\r\n\t\t// .then(data => {\r\n\t\t// \tconsole.log('DATA pries pat userio updata', data)\r\n\t\t// \tsetUpdatedUser({\r\n\t\t// \t\t...updatedUser,\r\n\t\t// \t\tlat: data.latitude,\r\n\t\t// \t\tlng: data.longitude,\r\n\t\t// \t})\r\n\t\t// })\r\n\r\n\t\t// userService\r\n\t\t// \t.create(updatedUser)\r\n\t\t// \t.then(returnedUser => {\r\n\t\t// \t\tsetUsers(users.concat(returnedUser))\r\n\t\t// \t})\r\n\t\t// \t.then(setOpenAddUserModal(false))\r\n\t\t// \t.catch(error => {\r\n\t\t// \t\talert('Error On New User Save!', error)\r\n\t\t// \t})\r\n\t\t//console.log('UPDATED Userio duomenys po visko: ', updatedUser)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{JSON.stringify(updatedUser)}\r\n\r\n\t\t\t<Grid container spacing={2} justify='flex-end'>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpenAddUserModal(true)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{ margin: '1rem' }}\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New User\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t{users.map((user, idx) => (\r\n\t\t\t\t\t<Grid key={idx} item xs={12} sm={6} md={4} lg={4}>\r\n\t\t\t\t\t\t<UserCard\r\n\t\t\t\t\t\t\tuserData={user}\r\n\t\t\t\t\t\t\thandelDeleteBtnClick={() => handelDeleteBtnClick(user.id)}\r\n\t\t\t\t\t\t\thandelEditBtnClick={() => handelOpenEditModal(user.id)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t\t<EditUserModal\r\n\t\t\t\topenModal={openEditModal}\r\n\t\t\t\thandelCloseEditModal={() => {\r\n\t\t\t\t\tsetUserId('')\r\n\t\t\t\t\tsetOpenEditModal(false)\r\n\t\t\t\t}}\r\n\t\t\t\tonFullNameChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({ ...updatedUser, fullName: e.target.value })\r\n\t\t\t\t}\r\n\t\t\t\tonEmailChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({ ...updatedUser, email: e.target.value })\r\n\t\t\t\t}\r\n\t\t\t\tonCityChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, city: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonStreetChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, street: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonHouseNrChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, houseNr: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonZipChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, zip: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonChangeSave={e => onChangeSave(e, userId)}\r\n\t\t\t/>\r\n\t\t\t<AddUserModal\r\n\t\t\t\topenAddUserModal={openAddUserModal}\r\n\t\t\t\thandelCloseAddUserModal={() => setOpenAddUserModal(false)}\r\n\t\t\t\tonFullNameChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({ ...updatedUser, fullName: e.target.value })\r\n\t\t\t\t}\r\n\t\t\t\tonEmailChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({ ...updatedUser, email: e.target.value })\r\n\t\t\t\t}\r\n\t\t\t\tonCityChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, city: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonStreetChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, street: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonHouseNrChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, houseNr: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonZipChange={e =>\r\n\t\t\t\t\tsetUpdatedUser({\r\n\t\t\t\t\t\t...updatedUser,\r\n\t\t\t\t\t\taddress: { ...updatedUser.address, zip: e.target.value },\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tonNewUserSave={e => onNewUserSave(e)}\r\n\t\t\t\tdisabled={false}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default VismaUsers\r\n","C:\\Users\\Mindaugas\\Documents\\React Gym\\vi-user\\src\\services\\geo.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":26,"column":1,"nodeType":"60","endLine":26,"endColumn":54},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]